<?xml version="1.0" encoding="UTF-8"?>

<!-- 
  -  applicationContext.xml
  - 
  -  This file is used by the Spring Framework.  It configures the Data Access Object(s)
  -  for access to the Databases.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xmlns:aop="http://www.springframework.org/schema/aop"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

 <!-- 
   -  Embedded Database stuff
   -->
 <bean id="dataSourceEmbedded"
  class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
  <property name="driverClass" value="org.h2.Driver"/>
  <property name="jdbcUrl" value="jdbc:h2:database\embedded_db\DataAdapterEmbeddedDB;TRACE_LEVEL_FILE=1;TRACE_LEVEL_SYSTEM_OUT=0"/>
  <property name="user" value="sa"/>
  <property name="password" value=""/>
 </bean>

 <bean id="jdbcDriverClassNames" class="java.util.Properties">
  <constructor-arg>
   <props>
    <prop key="ORACLE">oracle.jdbc.driver.OracleDriver</prop>
    <prop key="SQLSERVER">net.sourceforge.jtds.jdbc.Driver</prop>
    <prop key="SQLSERVER_SECURE">com.microsoft.sqlserver.jdbc.SQLServerDriver</prop>
   </props>
  </constructor-arg>
 </bean>

 <bean id="transactionManagerEmbedded"
  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  <property name="dataSource" ref="dataSourceEmbedded" />
 </bean>

 <tx:advice id="txAdviceEmbedded" transaction-manager="transactionManagerEmbedded">
  <tx:attributes>
   <!-- all methods starting with 'get' are read-only -->
   <tx:method name="get*" read-only="true"/>
   <tx:method name="exists*" read-only="true"/>
   <tx:method name="*" rollback-for="Throwable" />
  </tx:attributes>
 </tx:advice>

 <tx:advice id="txAdviceAllWrite" transaction-manager="transactionManagerEmbedded">
  <tx:attributes>
   <!-- all methods are read+write and rollback any exception -->
   <tx:method name="*" rollback-for="Throwable" />
  </tx:attributes>
 </tx:advice>

 <aop:config>
  <aop:pointcut id="pcForPropertiesDAO" expression="execution(* edu.vt.ipg.dataadapter.dao.embedded.PropertiesDAO.*(..))" />
  <aop:pointcut id="pcForZIP2FIPSDAO" expression="execution(* edu.vt.ipg.dataadapter.dao.embedded.ZIP2FIPSDAO.*(..))" />
  <aop:advisor advice-ref="txAdviceEmbedded" pointcut-ref="pcForPropertiesDAO" />
  <aop:advisor advice-ref="txAdviceAllWrite" pointcut-ref="pcForZIP2FIPSDAO" />
 </aop:config>

 <bean id="propertiesDAO" class="edu.vt.ipg.dataadapter.dao.embedded.PropertiesDAOImpl">
   <constructor-arg ref="dataSourceEmbedded" />
 </bean>
 
 <bean id="zip2fipsDAO" class="edu.vt.ipg.dataadapter.dao.embedded.ZIP2FIPSDAOImpl">
   <constructor-arg ref="dataSourceEmbedded" />
   <constructor-arg ref="propertiesDAO" />
 </bean>

 <bean id="dataSourceExposure" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
   <constructor-arg ref="dataSourceExposureSpied" />
 </bean>

 <!--
   -  Exposure Database stuff
   -->

 <!-- This is just a proxy object to allow for lazy-init. -->
 <bean id="dataSourceExposureSpied"
  class="edu.vt.ipg.dataadapter.jdbc.DataSourceDecorator" destroy-method="close">
   <constructor-arg>
     <!-- 
       -  The underlying data source is a c3p0 implementation.  
       -  See http://www.mchange.com/projects/c3p0/index.html for a description of the available configuration properties.
       -
       -  Most of the properties below are set to minimize the chance that an exception is thrown after a database restart or
       -  network hickup.
       -
       -  Note that java.util.Properties does not work here for some reason.  When used, constructor gets an empty java.util.Properties.
       -  Therefore we use a java.util.HashMap which works fine.
       -->
     <bean class="java.util.HashMap">  
       <constructor-arg>
         <map>
           <entry key="checkoutTimeout"><value>8000</value></entry>
           <entry key="acquireRetryAttempts"><value>2</value></entry>
           <entry key="acquireRetryDelay"><value>500</value></entry>          <!-- 500 ms -->
           <entry key="idleConnectionTestPeriod"><value>180</value></entry>   <!-- 30 minutes -->
           <entry key="preferredTestQuery"><value>SELECT 1 FROM DATAADAPTER.REDUCED_DGL1</value></entry>
           <entry key="testConnectionOnCheckout"><value>true</value></entry>
           <entry key="transactionIsolation"><value>TRANSACTION_READ_COMMITTED</value></entry>
         </map>
       </constructor-arg>
     </bean>     
   </constructor-arg>
 </bean>
 
 <bean id="transactionManagerExposure"
  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  <property name="dataSource" ref="dataSourceExposure" />
 </bean>

 <tx:advice id="txAdviceExposure" transaction-manager="transactionManagerExposure">
  <tx:attributes>
   <tx:method name="get*" read-only="true" timeout="0"/>
   <tx:method name="*" rollback-for="Throwable" />
  </tx:attributes>
 </tx:advice>
  
 <!-- 
   -  Support up to 3 schema names in the Exposure-DB.  Schema Names are supplied dynamically
   -  since they come from DA_PROPERTIES.
   -->
 <bean id="exposedTablesDAO1" class="edu.vt.ipg.dataadapter.dao.exposure.ExposedTablesDAOImpl">
   <constructor-arg ref="dataSourceExposure" />
   <constructor-arg ref="transactionManagerExposure" />
 </bean>
 <bean id="exposedTablesDAO2" class="edu.vt.ipg.dataadapter.dao.exposure.ExposedTablesDAOImpl">
   <constructor-arg ref="dataSourceExposure" />
   <constructor-arg ref="transactionManagerExposure" />
 </bean>
 <bean id="exposedTablesDAO3" class="edu.vt.ipg.dataadapter.dao.exposure.ExposedTablesDAOImpl">
   <constructor-arg ref="dataSourceExposure" />
   <constructor-arg ref="transactionManagerExposure" />
 </bean>
 
 <bean id="exposureDbFacade"
  class="edu.vt.ipg.dataadapter.ExposedTablesFacade"/>
 
</beans>